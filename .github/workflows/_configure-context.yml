name: Configure Build Context

on:
  workflow_call:
    inputs:
      src_type:
        required: true
        type: string
      
jobs: 
  configure-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Production Docker meta
        if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
        id: prd_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            it-scripts-${{ inputs.src_type }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha

      - name: Development Docker meta
        if: github.ref_name == 'develop'
        id: dev_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            it-scripts-${{ inputs.src_type }}
          tags: |
            type=ref,event=branch

      - run: echo "Environment Configured"
      - run: echo "${{ steps.dev_meta.outputs.tags }}"
    outputs:
      prd_tags: ${{ steps.prd_meta.outputs.tags }}
      prd_labels: ${{ steps.prd_meta.outputs.labels }}
      dev_tags: ${{ steps.dev_meta.outputs.tags }}
      dev_labels: ${{ steps.dev_meta.outputs.labels }}

  set-variables:
    runs-on: ubuntu-latest
    needs: [ configure-environment ]
    outputs:
      env_type: ${{ steps.detected_vars.outputs.env_type }} 
      meta_tags: ${{ steps.detected_vars.outputs.meta_tags }}
      meta_labels: ${{ steps.detected_vars.outputs.meta_labels }}
    steps:
      - name: Use development unless production detected
        id: detected_vars
        run: |
          if [ -n "${{ needs.jobs.configure-environment.outputs.prd_tags }}" ]; then
            echo "Setting Production Variables"
            echo "::set-output name=env_type::production"
            echo "::set-output name=meta_tags::${{ needs.jobs.configure-environment.outputs.prd_tags }}"
            echo "::set-output name=meta_labels::${{ needs.jobs.configure-environment.outputs.prd_labels }}"
          elif [ -n "${{ needs.jobs.configure-environment.outputs.dev_tags }}" ]; then
            echo "Setting Development Variables"
            echo "::set-output name=env_type::development"
            echo "::set-output name=meta_tags::${{ needs.jobs.configure-environment.outputs.dev_tags }}"
            echo "::set-output name=meta_labels::${{ needs.jobs.configure-environment.outputs.dev_labels }}"
          else
            echo "No image tags for build environment detected"
            exit 1
          fi

  start-build:
    needs: [ set-variables ] 
    uses: ./.github/workflows/_build-image.yml
    with:
      src_type: ${{ inputs.src_type }}
      env_type: ${{ needs.jobs.set-variables.outputs.env_type }}
      meta_tags: ${{ needs.jobs.set-variables.outputs.meta_tags }}
      meta_labels: ${{ needs.jobs.set-variables.outputs.meta_labels }}

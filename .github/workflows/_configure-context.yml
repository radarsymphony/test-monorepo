name: Configure Build Context

on:
  workflow_call:
    inputs:
      src_type:
        required: true
        type: string
      
jobs: 
  configure-environment:
    runs-on: ubuntu-latest
    outputs:
      env_type: ${{ steps.detect_vars.outputs.env_type }}
      meta_tags: ${{ steps.detect_vars.outputs.meta_tags }}
      meta_labels: ${{ steps.detect_vars.outputs.meta_labels }}
    steps:
      - id: context
        if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
        run: echo "prd_true=true" >> $GITHUB_OUTPUT

      - name: Production Docker meta
        id: prd_meta
        if: ${{ steps.context.outputs.prd_true }}
        uses: docker/metadata-action@v5
        with:
          images: |
            it-scripts-${{ inputs.src_type }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha

      - name: Development Docker meta
        id: dev_meta
        if: ${{ steps.context.outputs.prd_true != 'true' }}
        uses: docker/metadata-action@v5
        with:
          images: |
            it-scripts-${{ inputs.src_type }}
          tags: |
            type=ref,event=branch

      - name: Use development unless production detected
        id: detected_vars
        run: |
          if [ -n "${{steps.context.outputs.prd_true}}" ]; then
            echo "Setting Production Variables"
            echo "env_type=production" >> $GITHUB_OUTPUT
            {
              echo "meta_tags<<EOF"
              echo "${{ steps.prd_meta.outputs.tags }}"
              echo "EOF"
            } >> $GITHUB_OUTPUT
            { 
              echo "meta_labels<<EOF"
              echo "${{ steps.prd_meta.outputs.labels }}"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          else
            echo "Setting Development Variables"
            echo "env_type=development" >> $GITHUB_OUTPUT
            {
              echo "meta_tags<<EOF"
              echo "${{ steps.dev_meta.outputs.tags }}"
              echo "EOF"
            } >> $GITHUB_OUTPUT
            { 
              echo "meta_labels<<EOF"
              echo "${{ steps.dev_meta.outputs.labels }}"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          fi

  start-build:
    needs: [ configure-environment ] 
    uses: ./.github/workflows/_build-image.yml
    with:
      src_type: ${{ inputs.src_type }}
      env_type: ${{ needs.jobs.configure-environment.outputs.env_type }}
      meta_tags: ${{ needs.jobs.configure-environment.outputs.meta_tags }}
      meta_labels: ${{ needs.jobs.configure-environment.outputs.meta_labels }}
